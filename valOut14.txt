Expression #1 parse was successful.
It is ( {} <= { 1 } ? (d @ s) : (d U s) )
Expression #1's evaluation threw an exception with message 'error in eval : variable s is not bound in the environment'
Expression #2 parse was successful.
It is ( {} = { 1 } ? (d @ s) : (d U s) )
Expression #2's evaluation threw an exception with message 'error in eval : variable s is not bound in the environment'
Expression #3 parse was successful.
It is ( { 2 } <= { 1 } ? (d \ s) : (d (+) s) )
Expression #3's evaluation threw an exception with message 'error in eval : variable s is not bound in the environment'
Expression #4 parse was successful.
It is ( { 1, 2 } <= { 1, 2 } ? (d \ s) : (d (+) s) )
Expression #4's evaluation threw an exception with message 'error in eval : variable s is not bound in the environment'
Expression #5 parse was successful.
It is ( {} <= { 1 } ? {} : CMP{} )
It evaluates to 
{}
Expression #6 parse was successful.
It is (( {} = CMP{} ? { 0, 1, 2, 4 } : { 1, 2, 3, 4, 5 } ) @ ( { 2 } = { 1 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 3, 4 }
Expression #7 parse was successful.
It is (( {} = CMP{} ? { 0, 1, 2, 4 } : { 1, 2, 3, 4, 5 } ) @ ( {} <= CMP{ 2, 3 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 4, 5 }
Expression #8 parse was successful.
It is (( { 1, 2 } <= CMP{} ? { 0, 1, 2, 4 } : { 1, 2, 3, 4, 5 } ) @ ( { 1 } = { 5 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 4 }
Expression #9 parse was successful.
It is (( { 2, 3 } = { 2, 3 } ? { 0, 1, 2, 4 } : { 1, 2, 3, 4, 5 } ) @ ( { 2, 3 } <= { 1, 2, 3, 4, 5 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 0, 4 }
Expression #10 parse was successful.
It is (( {} = CMP{} ? { 0, 1, 2, 4 } : { 1, 2, 3, 4, 5 } ) U ( { 2 } = { 1 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 1, 2, 3, 4, 5 }
Expression #11 parse was successful.
It is (( {} = CMP{} ? { 0, 1, 2, 4 } : { 1, 2, 3, 4, 5 } ) U ( {} <= CMP{ 2, 3 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 0, 1, 2, 3, 4, 5 }
Expression #12 parse was successful.
It is (( { 1, 2 } <= CMP{} ? { 0, 1, 2, 4 } : { 1, 2, 3, 4, 5 } ) U ( { 1 } = { 5 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 0, 1, 2, 3, 4 }
Expression #13 parse was successful.
It is (( { 2, 3 } = { 2, 3 } ? { 0, 1, 2, 4 } : { 1, 2, 3, 4, 5 } ) U ( { 2, 3 } <= { 1, 2, 3, 4, 5 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 0, 1, 2, 4, 5 }
Expression #14 parse was successful.
It is (( {} = CMP{} ? { 0, 1, 2, 4 } : { 1, 2, 3, 4, 5 } ) \ ( { 2 } = { 1 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 1, 2, 5 }
Expression #15 parse was successful.
It is (( {} = CMP{} ? { 0, 1, 2, 4 } : { 1, 2, 3, 4, 5 } ) \ ( {} <= CMP{ 2, 3 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 1, 2, 3 }
Expression #16 parse was successful.
It is (( { 1, 2 } <= CMP{} ? { 0, 1, 2, 4 } : { 1, 2, 3, 4, 5 } ) \ ( { 1 } = { 5 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 0, 1, 2 }
Expression #17 parse was successful.
It is (( { 2, 3 } = { 2, 3 } ? { 0, 1, 2, 4 } : { 1, 2, 3, 4, 5 } ) \ ( { 2, 3 } <= { 1, 2, 3, 4, 5 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 1, 2 }
Expression #18 parse was successful.
It is (( {} = CMP{} ? { 0, 1, 2, 4 } : { 1, 2, 3, 4, 5 } ) (+) ( { 2 } = { 1 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 1, 2, 5 }
Expression #19 parse was successful.
It is (( {} = CMP{} ? { 0, 1, 2, 4 } : { 1, 2, 4, 5 } ) (+) ( {} <= CMP{ 2, 3 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 0, 1, 2 }
Expression #20 parse was successful.
It is (( { 1, 2 } <= CMP{} ? { 0, 1, 2, 4 } : { 1, 2, 4, 5 } ) (+) ( { 1 } = { 5 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 0, 1, 2, 3 }
Expression #21 parse was successful.
It is (( { 2, 3 } = { 2, 3 } ? { 0, 1, 2, 4 } : { 1, 2, 4, 5 } ) (+) ( { 2, 3 } <= { 1, 2, 4, 5 } ? { 0, 4, 5 } : { 3, 4 } ))
It evaluates to 
{ 0, 1, 2, 3 }
Expression #22 parse was successful.
It is ( {} = CMP{} ? ( { 1, 2, 3 } = { 1, 2, 3, 4 } ? ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? {} : { 1 } ) : ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? { 2 } : { 3 } ) ) : ( { 1, 2, 3 } = { 1, 2, 3, 4 } ? ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? { 4 } : { 5 } ) : ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? { 6 } : { 7 } ) ) )
It evaluates to 
{ 7 }
Expression #23 parse was successful.
It is ( {} = CMP{} ? ( { 1, 2, 3 } = { 1, 2, 3, 4 } ? ( CMP{ 1 } <= CMP{} ? {} : { 1 } ) : ( CMP{ 1 } <= CMP{} ? { 2 } : { 3 } ) ) : ( { 1, 2, 3 } = { 1, 2, 3, 4 } ? ( CMP{ 1 } <= CMP{} ? { 4 } : { 5 } ) : ( CMP{ 1 } <= CMP{} ? { 6 } : { 7 } ) ) )
It evaluates to 
{ 6 }
Expression #24 parse was successful.
It is ( {} = CMP{} ? ( { 1, 2, 3 } <= { 0, 1, 2, 3, 4 } ? ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? {} : { 1 } ) : ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? { 2 } : { 3 } ) ) : ( { 1, 2, 3 } <= { 0, 1, 2, 3, 4 } ? ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? { 4 } : { 5 } ) : ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? { 6 } : { 7 } ) ) )
It evaluates to 
{ 5 }
Expression #25 parse was successful.
It is ( {} = CMP{} ? ( { 1, 2, 3 } <= { 0, 1, 2, 3, 4 } ? ( CMP{ 1 } <= CMP{} ? {} : { 1 } ) : ( CMP{ 1 } <= CMP{} ? { 2 } : { 3 } ) ) : ( { 1, 2, 3 } <= { 0, 1, 2, 3, 4 } ? ( CMP{ 1 } <= CMP{} ? { 4 } : { 5 } ) : ( CMP{ 1 } <= CMP{} ? { 6 } : { 7 } ) ) )
It evaluates to 
{ 4 }
Expression #26 parse was successful.
It is ( {} <= CMP{} ? ( { 1, 2, 3 } = { 1, 2, 3, 4 } ? ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? {} : { 1 } ) : ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? { 2 } : { 3 } ) ) : ( { 1, 2, 3 } = { 1, 2, 3, 4 } ? ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? { 4 } : { 5 } ) : ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? { 6 } : { 7 } ) ) )
It evaluates to 
{ 3 }
Expression #27 parse was successful.
It is ( {} <= CMP{} ? ( { 1, 2, 3 } = { 1, 2, 3, 4 } ? ( CMP{ 1 } <= CMP{} ? {} : { 1 } ) : ( CMP{ 1 } <= CMP{} ? { 2 } : { 3 } ) ) : ( { 1, 2, 3 } = { 1, 2, 3, 4 } ? ( CMP{ 1 } <= CMP{} ? { 4 } : { 5 } ) : ( CMP{ 1 } <= CMP{} ? { 6 } : { 7 } ) ) )
It evaluates to 
{ 2 }
Expression #28 parse was successful.
It is ( {} <= CMP{} ? ( { 1, 2, 3 } <= { 0, 1, 2, 3, 4 } ? ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? {} : { 1 } ) : ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? { 2 } : { 3 } ) ) : ( { 1, 2, 3 } <= { 0, 1, 2, 3, 4 } ? ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? { 4 } : { 5 } ) : ( { 1, 2, 3, 4 } <= { 1, 2, 3, 5 } ? { 6 } : { 7 } ) ) )
It evaluates to 
{ 1 }
Expression #29 parse was successful.
It is ( {} <= CMP{} ? ( { 1, 2, 3 } <= { 0, 1, 2, 3, 4 } ? ( CMP{ 1 } <= CMP{} ? {} : { 1 } ) : ( CMP{ 1 } <= CMP{} ? { 2 } : { 3 } ) ) : ( { 1, 2, 3 } <= { 0, 1, 2, 3, 4 } ? ( CMP{ 1 } <= CMP{} ? { 4 } : { 5 } ) : ( CMP{ 1 } <= CMP{} ? { 6 } : { 7 } ) ) )
It evaluates to 
{}
End of file reached.
29 expressions were consumed, 0 failed to parse, 29 parsed, and 25 of those evaluated to a result.
